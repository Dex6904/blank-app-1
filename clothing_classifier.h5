import tensorflow as tf
from tensorflow.keras.applications import EfficientNetB0
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.models import Model
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Load pre-trained model
base_model = EfficientNetB0(include_top=False, input_shape=(224, 224, 3), weights='imagenet')
x = Flatten()(base_model.output)
output = Dense(3, activation='softmax')(x)  # 3 classes: Top, Bottom, Shoe
model = Model(inputs=base_model.input, outputs=output)

# Compile model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Load dataset
datagen = ImageDataGenerator(rescale=1.0/255, validation_split=0.2)
train_data = datagen.flow_from_directory('dataset', target_size=(224, 224), batch_size=32, subset='training')
val_data = datagen.flow_from_directory('dataset', target_size=(224, 224), batch_size=32, subset='validation')

# Train model
model.fit(train_data, validation_data=val_data, epochs=10)
model.save("clothing_classifier.h5")
